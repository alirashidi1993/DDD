// <auto-generated />
using System;
using HR.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HR.Persistence.Migrations
{
    [DbContext(typeof(HRDbContext))]
    [Migration("20220515043003_FirstInit")]
    partial class FirstInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HR.EmployeeContext.Domain.Attendances.Attendance", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EntranceTime")
                        .HasColumnType("Time");

                    b.Property<TimeSpan>("ExitTime")
                        .HasColumnType("Time");

                    b.Property<DateTime>("WorkingDayDate")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Attendance", "EmployeeContext");
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Contract", "EmployeeContext");
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("Date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<long>("PersonnelCode")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Employee", "EmployeeContext");
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Shifts.Shift", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("CycleDurationInDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Shift", "EmployeeContext");
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.Contract", b =>
                {
                    b.HasOne("HR.EmployeeContext.Domain.Employees.Employee", null)
                        .WithMany("Contracts")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Employee_Contracts")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.Employee", b =>
                {
                    b.OwnsMany("HR.EmployeeContext.Domain.Employees.EmployeeShiftAssignment", "EmployeeShiftAssignments", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<bool>("Archived")
                                .HasColumnType("bit");

                            b1.Property<DateTime>("AssignmentDate")
                                .HasColumnType("Date");

                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<Guid>("ShiftId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("EmployeeShiftAssignments", "EmployeeContext");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsMany("HR.EmployeeContext.Domain.Employees.OverallWorkSummary", "OverallWorkSummaries", b1 =>
                        {
                            b1.Property<long?>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("datetime2");

                            b1.Property<double>("TotalOvertimeInHours")
                                .HasColumnType("float");

                            b1.Property<double>("TotalUndertimeInHours")
                                .HasColumnType("float");

                            b1.Property<double>("TotalWorkInHours")
                                .HasColumnType("float");

                            b1.HasKey("Id");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("OverallWorkSummaries", "EmployeeContext");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("EmployeeShiftAssignments");

                    b.Navigation("OverallWorkSummaries");
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Shifts.Shift", b =>
                {
                    b.OwnsMany("HR.EmployeeContext.Domain.Shifts.ShiftPattern", "Patterns", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("DayOrder")
                                .HasColumnType("int");

                            b1.Property<TimeSpan>("EndTime")
                                .HasColumnType("Time");

                            b1.Property<Guid>("ShifId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<TimeSpan>("StartTime")
                                .HasColumnType("Time");

                            b1.HasKey("Id");

                            b1.HasIndex("ShifId");

                            b1.ToTable("ShiftPatterns", "EmployeeContext");

                            b1.WithOwner()
                                .HasForeignKey("ShifId");
                        });

                    b.Navigation("Patterns");
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.Employee", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
